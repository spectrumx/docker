services:
  icarus:
    image: randyherban/icarus:latest
    platform: linux/arm64/v8
    env_file: ".env"
    volumes:
      #- ./icarus/system.json:/opt/radiohound/icarus/system.json
      - /data/ringbuffer:/data/ringbuffer
    network_mode: "host"
    container_name: "icarus"
    restart: unless-stopped
    profiles:
      - dev

  radiohound_web:
    image: randyherban/radiohound_web:latest
    platform: linux/arm64/v8
    env_file: ".env"
    network_mode: "host"
    container_name: "radiohound_web"
    restart: unless-stopped
    profiles:
      - dev

  radiohound_app:
    image: randyherban/radiohound_app:latest
    platform: linux/arm64/v8
    env_file: ".env"
    network_mode: "host"
    container_name: "radiohound_app"
    restart: unless-stopped
    profiles:
      - dev

  mqtt:
    image: "eclipse-mosquitto"
    container_name: "mqtt"
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto:/etc/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf

  mqtt-ssh-tunnel:
    image: randyherban/base-image:latest
    container_name: mqtt_ssh_tunnel
    ports:
      - "8083:8083"
    restart: unless-stopped
    volumes:
      - /opt/radiohound/.ssh/id_rsa:/root/.ssh/id_rsa:ro
    entrypoint: >
      sh -c "while true; do
               nc -zvw3 radiohound.ee.nd.edu 1883 ||
               echo 'Attempting to create ssh tunnel' \
               ssh -i /root/.ssh/id_rsa -o GlobalKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -N -L 127.0.0.1:8083:radiohound.ee.nd.edu:1883 git@radiohound.ee.nd.edu;
               sleep 30;
             done"
    profiles:
      - dev

  mongodb:
    image: "mongodb/mongodb-community-server"
    container_name: "mongodb"
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
        - mongodb:/data/db
    env_file: ".env"
    networks:
      - mongodb
    profiles:
      - dev

  fft:
    image: randyherban/fft:latest
    platform: linux/arm64/v8
    env_file: ".env"
    environment:
      - DRF_RECORDING_DIR=/data/ringbuffer
      - DRF_FFT_CHANNEL=sr1MHz
    container_name: fft
    restart: unless-stopped
    network_mode: host
    volumes:
      - /data/ringbuffer:/data/ringbuffer
    profiles:
      - dev

  recorder:
    image: ghcr.io/ryanvolz/mep-docker/recorder:v1.2
    build: ./recorder
    container_name: recorder
    environment:
      - DRF_RECORDING_DIR=/data/ringbuffer
      - DRF_TMP_RINGBUFFER_DIR=/data/tmp-ringbuffer
      - HOLOSCAN_EXECUTOR_LOG_LEVEL=WARN
      - HOLOSCAN_LOG_LEVEL=INFO
      - HOLOSCAN_LOG_FORMAT=DEFAULT
      - PYTHONUNBUFFERED=1
      - RECORDER_DEFAULT_CONFIG=sr1MHz
    network_mode: host
    restart: unless-stopped
    runtime: nvidia
    tmpfs:
      - /ramdisk:mode=777,uid=${UID},gid=${GID},nodev,nosuid,noexec,size=1G
    user: ${UID}:${GID}
    volumes:
      - /data:/data
      - ./recorder:/app

volumes:
    mongodb:

networks:
  mongodb:
