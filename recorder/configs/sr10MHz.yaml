# SPDX-FileCopyrightText: Copyright (c) 2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
scheduler:
  worker_thread_number: 8
  stop_on_deadlock: true
  stop_on_deadlock_timeout: 500

pipeline:
  selector: false
  converter: true
  rotator: false
  resampler0: true
  resampler1: false
  resampler2: true
  int_converter: false
  digital_rf: true
  metadata: true
  spectrogram: true
  spectrogram_mqtt: true
  spectrogram_output: true

packet:
  batch_size: &batch_size 625 # Number of packets to process at once into tensor data
  batch_capacity: 5 # Number of batches that can be queued and processed at once
  max_packet_size: &max_packet_size 8256
  num_subchannels: &num_subchannels 1 # Number of IQ subchannels of data that form a sample
  num_samples: &rx_chunk_size 6400000 # Number of samples to output as a single chunk, must fit one batch of packets
  buffer_size: 4 # Number of num_samples chunks to store in the rx buffer
  freq_idx_scaling: 1000
  freq_idx_offset: 0
  apply_conjugate: false
  spoof_header: false
  packet_skip_bytes: 64
  header_metadata:
    start_sample_idx: 0
    sample_rate_numerator: 64000000
    sample_rate_denominator: 1
    freq_idx: 0
    num_subchannels: *num_subchannels
    pkt_samples: 2048
    bits_per_int: 16
    is_complex: 1

basic_network:
  batch_size: *batch_size # Number of packets in a batch
  max_payload_size: *max_packet_size # Maximum payload size
  dst_port: 60133 # UDP destination port for packets
  l4_proto: udp # Layer 4 protocol
  ip_addr: 0.0.0.0 # Destination IP address

selector:
  subchannel_idx: [0]

rotator:
  cycle_duration_secs: 1
  cycle_start_timestamp: 0
  schedule:
    - start: 0
      freq: 0e+6

resampler0:
  up: 1
  down: 4
  outrate_cutoff: 1.0
  # transition_width: 2 * (cutoff - 1 / remaining_dec)
  #                   2 * (1.0 - 5 / 8) = 0.75
  outrate_transition_width: 0.75
  attenuation_db: 91.25

resampler2:
  up: 5
  down: 8
  outrate_cutoff: 1.0
  outrate_transition_width: 0.2
  attenuation_db: 99.25

drf_sink:
  channel_dir: sr10MHz/chB

metadata:
  receiver:
    description: "MEP recorder"
  processing:
    decimation: 32
    interpolation: 5

spectrogram:
  window: hann
  nperseg: 1000
  noverlap: null
  nfft: null
  detrend: false
  reduce_op: max
  num_spectra_per_chunk: 1

spectrogram_mqtt:
  input_buffer_capacity: 10
  service_name: recorder_fft
  status_topic: "{service_name}/status"
  data_topic: "radiohound/clients/data/{node_id}"
  mqtt_host: "localhost"
  mqtt_port: 1883
  mqtt_keepalive: 60

spectrogram_output:
  num_spectra_per_output: 600
  figsize:
    - 6.4
    - 4.8
  dpi: 200
  col_wrap: 1
  cmap: viridis
  snr_db_min: -5
  snr_db_max: 20
  plot_subdir: spectrograms
